@page "/Hoteltest"
@attribute [RenderModeInteractiveServer]
@inject NavigationManager NavigationManager

<PageTitle>Hotel</PageTitle>

<h1>Hotel</h1>


@switch(MenuChoice)
{
case 0:
    <button class="btn btn-primary" @onclick="() => MainMenu(1)">Guest</button>    <button class="btn btn-primary" @onclick="() => MainMenu(2)">Staff</button>
break;
case 1:
    switch(GuestChoice)
    {
        case 0:
            <button class="btn btn-primary" @onclick="() => GuestMenu(1)">Log In</button>    <button class="btn btn-primary" @onclick="() => GuestMenu(2)">Sign Up</button>
        break;
        case 1:
            <EditForm Model="@Model" OnSubmit="@Submit">
            <p>   Email  <InputText @bind-Value="Model!.Email" /></p>
            <p>Password  <InputText @bind-Value="Model!.Password" /></p>
            <button type="submit">Submit</button>
            </EditForm>
            <p>@ErrorMsg</p>
        break;
        case 2:

        break;
    }
break;
case 2:
    <p>Staff</p>
break;
}

@code
{
    private Guest? Model { get; set; }
    protected override void OnInitialized() => Model ??= new(null!, null!, null!, null!);
    private string ErrorMsg = "";
    private int MenuChoice = 0;
    private int GuestChoice = 0;
    private void MainMenu(int i)
    {
        MenuChoice = i;
    }
    private void GuestMenu(int i)
    {
        GuestChoice = i;
    }

    private void Submit()
    {
        Guest guest = GuestList.LogInAttempt(Model.Email, Model.Password, out string outputMessage);
        if(guest == null)
        {
            ErrorMsg = outputMessage;
        }
        else
        {
            Hotel.SessionGuest = guest;
            ErrorMsg = outputMessage;
            NavigationManager.NavigateTo("GuestInterface");
        }
    }
}